version: '3.5'

services:
  redis_proxy:
    container_name: 'redis_proxy'
    build: .
    depends_on:
      - redis
    env_file:
      - .env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      local:
        aliases:
          - "${APP_HOST}"


  redis:
    container_name: 'redis'
    image: redis:latest
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: on-failure
    networks:
      - local
    command: "redis-server --maxclients ${REDIS_MAX_CLI}"

  nginx:
    container_name: 'nginx'
    image: nginx:latest
    depends_on:
      - redis_proxy
    env_file:
      - .env
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    volumes:
      - ./nginx/proxy.template:/etc/nginx/conf.d/proxy.template
    restart: on-failure
    networks:
      - local
    command: /bin/sh -c "envsubst < /etc/nginx/conf.d/proxy.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  test:
    build: ./test
    container_name: test
    # depends_on:
    #   - nginx
    env_file:
      - .env
    # command: npx cypress run
    volumes:
      - ./test/test:/test
    networks:
      - local
    command: /bin/sh -c "npx mocha --exit"

networks:
  local:
